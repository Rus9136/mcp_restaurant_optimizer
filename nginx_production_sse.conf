# Production Nginx Configuration for MCP Restaurant Optimizer with SSE
# Optimized for https://mcp.madlen.space

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=sse_limit:10m rate=5r/s;

# Upstream configuration for load balancing
upstream mcp_backend {
    least_conn;  # Better distribution for SSE connections
    server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
    # server 127.0.0.1:8001 max_fails=3 fail_timeout=30s;  # Additional servers
    # server 127.0.0.1:8002 max_fails=3 fail_timeout=30s;
    
    # Health checks
    keepalive 32;
    keepalive_requests 1000;
    keepalive_timeout 75s;
}

server {
    listen 80;
    server_name mcp.madlen.space;
    
    # Force HTTPS redirect
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name mcp.madlen.space;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/mcp.madlen.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mcp.madlen.space/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;
    
    # Main API endpoints with rate limiting
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://mcp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard timeouts for REST API
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enable buffering for regular API calls
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://admin.madlen.space" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Cache-Control" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://admin.madlen.space";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Cache-Control";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # CRITICAL: Specialized SSE endpoint configuration
    location /api/v1/mcp/sse {
        # Dedicated rate limiting for SSE
        limit_req zone=sse_limit burst=10 nodelay;
        
        proxy_pass http://mcp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CRITICAL SSE SETTINGS - DO NOT CHANGE
        proxy_buffering off;                    # Disable all buffering
        proxy_cache off;                        # Disable caching
        proxy_set_header Connection '';         # Remove Connection header
        proxy_http_version 1.1;                 # Force HTTP/1.1
        
        # Extended timeouts for long-lived connections
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # SSE specific headers
        add_header Cache-Control 'no-cache, no-store, must-revalidate' always;
        add_header Pragma 'no-cache' always;
        add_header Expires '0' always;
        add_header X-Accel-Buffering 'no' always;
        
        # CORS for SSE - more permissive for analytics tools
        add_header Access-Control-Allow-Origin '*' always;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Cache-Control' always;
        add_header Access-Control-Expose-Headers 'Content-Type' always;
        
        # Handle SSE preflight
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Cache-Control';
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        # SSE connection monitoring
        access_log /var/log/nginx/sse_access.log combined;
    }
    
    # SSE status endpoint (no rate limiting for monitoring)
    location /api/v1/mcp/sse/status {
        proxy_pass http://mcp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeouts for status checks
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Enable caching for status endpoint
        proxy_cache_valid 200 30s;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://mcp_backend;
        proxy_set_header Host $host;
        access_log off;
        
        # Quick health check timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|log|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Default location for web interface (if any)
    location / {
        proxy_pass http://mcp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard web timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Logging configuration
    error_log /var/log/nginx/mcp_error.log warn;
    access_log /var/log/nginx/mcp_access.log combined;
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
        return 500 '{"error": "Internal server error", "timestamp": "$time_iso8601"}';
        add_header Content-Type application/json;
    }
}

# Additional server block for API subdomain (optional)
server {
    listen 443 ssl http2;
    server_name api.mcp.madlen.space;
    
    # Same SSL configuration
    ssl_certificate /etc/letsencrypt/live/mcp.madlen.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mcp.madlen.space/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Redirect API subdomain to main domain
    return 301 https://mcp.madlen.space$request_uri;
}

# Monitoring and metrics (if using Prometheus)
server {
    listen 127.0.0.1:9113;
    server_name localhost;
    
    location /metrics {
        access_log off;
        allow 127.0.0.1;
        deny all;
        
        # Nginx metrics endpoint
        stub_status on;
    }
}